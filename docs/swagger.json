{
  "openapi": "3.1.0",
  "info": {
    "version": "1.0.0",
    "title": "Contacts app",
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    },
    "description": "This is a documentation of contacts app"
  },
  "servers": [
    {
      "url": "http://localhost:5173"
    },
    {
      "url": "http://localhost:3000"
    },
    {
      "url": "https://aquadev-back.onrender.com/"
    }
  ],
  "tags": [
    {
      "name": "Authentication",
      "description": "Authentication operations for users"
    },
    {
      "name": "User",
      "description": "User management operations (registration, profile, etc.)"
    }
  ],
  "paths": {
    "/users/login": {
      "post": {
        "tags": [
          "Authentication"
        ],
        "summary": "Login user",
        "operationId": "loginUser",
        "description": "Login a user by providing their email and password. Returns access and refresh token",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "email",
                  "password"
                ],
                "properties": {
                  "email": {
                    "type": "string",
                    "format": "email",
                    "description": "User's email address",
                    "example": "user@example.com"
                  },
                  "password": {
                    "type": "string",
                    "format": "password",
                    "description": "User's password (min: 6, max: 28 characters)",
                    "minLength": 6,
                    "maxLength": 28,
                    "example": "password123"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully logged in a user!",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "description": "Status code of the response",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "description": "Message describing the outcome of the request",
                      "example": "Successfully logged in a user!"
                    },
                    "data": {
                      "type": "object",
                      "description": "Data containing the access token",
                      "properties": {
                        "accessToken": {
                          "type": "string",
                          "description": "Access token",
                          "example": "wRyjvWY68U9+3zqCqUGK"
                        }
                      }
                    }
                  }
                }
              }
            },
            "headers": {
              "Set-Cookie": {
                "description": "Cookies set for maintaining session",
                "schema": {
                  "type": "string",
                  "example": "sessionId=session_12345; HttpOnly; Secure; SameSite=Strict"
                }
              },
              "Set-Cookie2": {
                "description": "Another cookie for session handling",
                "schema": {
                  "type": "string",
                  "example": "anotherCookie=some_value; HttpOnly; Secure; SameSite=Strict"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/users/register": {
      "post": {
        "tags": [
          "Authentication"
        ],
        "summary": "Register User",
        "operationId": "registerUser",
        "description": "Register a new user with their email, password and name.",
        "security": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "email",
                  "password"
                ],
                "properties": {
                  "email": {
                    "type": "string",
                    "format": "email",
                    "description": "Email for registration",
                    "example": "johndoe@example.com"
                  },
                  "password": {
                    "type": "string",
                    "format": "password",
                    "description": "Password for registration",
                    "minLength": 6,
                    "maxLength": 28,
                    "example": "password123"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "User registration successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "description": "Response status",
                      "example": 201
                    },
                    "message": {
                      "type": "string",
                      "description": "Response message",
                      "example": "Successfully registered a user"
                    },
                    "data": {
                      "type": "object",
                      "description": "User data",
                      "properties": {
                        "userId": {
                          "type": "string",
                          "description": "User`s Id",
                          "example": "64af16e9c6b9e71a6c123abc"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "409": {
            "$ref": "#/components/responses/409"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/users/refresh": {
      "post": {
        "tags": [
          "Authentication"
        ],
        "summary": "Refresh User Session",
        "operationId": "refreshUserSession",
        "description": "Refresh the user session by providing session ID and refresh token.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "sessionId",
                  "refreshToken"
                ],
                "properties": {
                  "sessionId": {
                    "type": "string",
                    "description": "Session ID for refreshing",
                    "example": "session_id_123"
                  },
                  "refreshToken": {
                    "type": "string",
                    "description": "Refresh token",
                    "example": "/zw62g+lq/63JymjlqAfpacVr9ir9TCG5ZMsBA1S"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Session refreshed successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "description": "Status code of the response",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "description": "Message describing the outcome of the request",
                      "example": "Successfully refreshed a session"
                    },
                    "data": {
                      "type": "object",
                      "description": "Data containing the new tokens",
                      "properties": {
                        "accessToken": {
                          "type": "string",
                          "description": "New access token",
                          "example": "n4o9T8BkvLuaaiBgdEZn"
                        },
                        "refreshToken": {
                          "type": "string",
                          "description": "New refresh token",
                          "example": "tRRRgqmdISK5vAnu7nESyC4e61KZDGWkplTZ0IQM"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/users/logout": {
      "post": {
        "tags": [
          "Authentication"
        ],
        "summary": "Logout User",
        "operationId": "logoutUser",
        "description": "Logout the user by invalidating their session and refresh token",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "sessionId",
                  "refreshToken"
                ],
                "properties": {
                  "sessionId": {
                    "type": "string",
                    "description": "Session ID for logging out",
                    "example": "session_id_123"
                  },
                  "refreshToken": {
                    "type": "string",
                    "description": "Refresh token",
                    "example": "tRRRgqmdISK5vAnu7nESyC4e61KZDGWkplTZ0IQM"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "User logged out successfully"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/users/update": {
      "patch": {
        "tags": [
          "Users"
        ],
        "summary": "Update user profile",
        "operationId": "update",
        "description": "Updates the user's profile information, including avatar if provided.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "avatar": {
                    "type": "string",
                    "format": "binary",
                    "description": "The user's avatar image"
                  },
                  "name": {
                    "type": "string",
                    "description": "The user's name"
                  },
                  "email": {
                    "type": "string",
                    "format": "email",
                    "description": "The user's email address"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully updated user profile",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully patched a contact!"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "_id": {
                          "type": "string",
                          "description": "User's unique ID",
                          "example": "5f4e7b5f1b0a5c3d0bfc6a58"
                        },
                        "name": {
                          "type": "string",
                          "description": "User's name",
                          "example": "John Doe"
                        },
                        "email": {
                          "type": "string",
                          "description": "User's email",
                          "example": "john.doe@example.com"
                        },
                        "avatar": {
                          "type": "string",
                          "description": "URL of the user's avatar image (if updated)",
                          "example": "https://res.cloudinary.com/demo/image/upload/v1585012836/avatars/johndoe.jpg"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/users/google/url": {
      "get": {
        "tags": [
          "Authentication"
        ],
        "summary": "Get Google OAuth URL",
        "operationId": "getGoogleOAuthUrl",
        "description": "Retrieve the Google OAuth URL to initiate the authentication flow.",
        "security": [],
        "responses": {
          "200": {
            "description": "Google OAuth URL retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully get Google OAuth url!"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "url": {
                          "type": "string",
                          "format": "uri",
                          "example": "https://accounts.google.com/o/oauth2/v2/auth?scope=email"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/users": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Get User Data",
        "operationId": "getUserData",
        "description": "Retrieve the authenticated user's data.",
        "security": [],
        "responses": {
          "200": {
            "description": "User data retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "email": {
                      "type": "string",
                      "example": "user@example.com"
                    },
                    "name": {
                      "type": "string",
                      "example": "John Doe"
                    },
                    "avatar": {
                      "type": "string",
                      "example": "https://example.com/avatar.jpg"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      },
      "post": {
        "tags": [
          "User"
        ],
        "summary": "Create a new user",
        "operationId": "users",
        "description": "Create a new user",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "User name",
                    "example": "John Doe"
                  },
                  "email": {
                    "type": "string",
                    "description": "Email address",
                    "example": "jonh.doe@example.com"
                  },
                  "password": {
                    "type": "string",
                    "description": "User password",
                    "example": "password"
                  },
                  "gender": {
                    "type": "string",
                    "description": "User gender",
                    "enum": [
                      "woman",
                      "man"
                    ],
                    "example": "man"
                  },
                  "weight": {
                    "type": "number",
                    "description": "User weight in kilograms",
                    "example": 70
                  },
                  "timeActive": {
                    "type": "number",
                    "description": "User activity time in minutes",
                    "example": 120
                  },
                  "dailyNorma": {
                    "type": "number",
                    "description": "User`s daily calorie intake",
                    "example": 2000
                  },
                  "avatar": {
                    "type": "string",
                    "description": "User avatar URL",
                    "example": "https:://example.com/avatar.jpg"
                  }
                }
              }
            }
          },
          "description": "Details to create a user"
        },
        "responses": {
          "201": {
            "description": "Create a user",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 201
                    },
                    "message": {
                      "type": "string",
                      "example": "Seccessfully registered a user"
                    },
                    "data": {
                      "type": "object",
                      "$ref": "#/components/schemas/user"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "cookieAuth": {
        "type": "apiKey",
        "in": "cookie",
        "name": "refreshToken"
      },
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    },
    "responses": {
      "400": {
        "description": "Bad Request",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "status",
                "message",
                "details"
              ],
              "properties": {
                "status": {
                  "type": "integer",
                  "example": 400
                },
                "message": {
                  "type": "string",
                  "example": "Bad Request"
                },
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "field": {
                        "type": "string",
                        "example": "email"
                      },
                      "message": {
                        "type": "string",
                        "example": "Email is required"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "401": {
        "description": "Unauthorized error",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "status",
                "message",
                "details"
              ],
              "properties": {
                "status": {
                  "type": "integer",
                  "example": 401
                },
                "message": {
                  "type": "string",
                  "example": "Authentication failed"
                },
                "details": {
                  "type": "string",
                  "example": "Invalid or expired token"
                }
              }
            }
          }
        }
      },
      "404": {
        "description": "User not found",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "status",
                "message",
                "details"
              ],
              "properties": {
                "status": {
                  "type": "integer",
                  "example": 404
                },
                "message": {
                  "type": "string",
                  "example": "Resource not found"
                },
                "details": {
                  "type": "string",
                  "example": "The requested resource does not exist"
                }
              }
            }
          }
        }
      },
      "409": {
        "description": "Request conflict, e.g. email already in use",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "integer",
                  "example": 409
                },
                "message": {
                  "type": "string",
                  "example": "Email in use"
                },
                "details": {
                  "type": "string",
                  "example": "The email address provided is already registered"
                }
              }
            }
          }
        }
      },
      "500": {
        "description": "Internal server error",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "status",
                "message",
                "details"
              ],
              "properties": {
                "status": {
                  "type": "integer",
                  "example": 500
                },
                "message": {
                  "type": "string",
                  "example": "Internal Server error"
                },
                "details": {
                  "type": "string",
                  "example": "Something went wrong. Please try again later."
                }
              }
            }
          }
        }
      }
    },
    "schemas": {
      "user": {
        "type": "object",
        "required": [
          "name",
          "email",
          "password",
          "gender",
          "weight",
          "timeActive",
          "dailyNorma",
          "avatar"
        ],
        "properties": {
          "name": {
            "type": "string",
            "description": "User name",
            "example": "John Doe"
          },
          "email": {
            "type": "string",
            "description": "Email address",
            "example": "jonh.doe@example.com"
          },
          "password": {
            "type": "string",
            "description": "User password",
            "example": "password"
          },
          "gender": {
            "type": "string",
            "description": "User gender",
            "enum": [
              "woman",
              "man"
            ],
            "example": "man"
          },
          "weight": {
            "type": "number",
            "description": "User weight in kilograms",
            "example": 70
          },
          "timeActive": {
            "type": "number",
            "description": "User activity time in minutes",
            "example": 120
          },
          "dailyNorma": {
            "type": "number",
            "description": "User`s daily calorie intake",
            "example": 2000
          },
          "avatar": {
            "type": "string",
            "description": "User avatar URL",
            "example": "https:://example.com/avatar.jpg"
          }
        }
      }
    }
  }
}